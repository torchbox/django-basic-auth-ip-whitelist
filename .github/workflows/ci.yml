name: CI

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: 3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run tox
        env:
          TOXENV: ruff
        run: tox

  test:
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        django-version: [42, 50, 51, main]
        experimental: [false]

        # Allow failures on Django main branch test.
        include:
          - python-version: "3.13"
            django-version: main
            experimental: true

        exclude:
          - django-version: 50
            python-version: "3.9"
          - django-version: 51
            python-version: "3.9"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run tox - Python ${{ matrix.python-version }}, Django ${{ matrix.django-version }}
        env:
          TOXENV: py-dj${{ matrix.django-version }}
        run: tox

  build:
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3
    - name: Install dependencies
      run: python -m pip install --upgrade pip build
    - name: Build package
      run: python -m build
    - name: Save built package
      uses: actions/upload-artifact@v3
      with:
        name: package
        path: dist
    - name: Publish to PyPi
      if: ${{ github.ref_type == 'tag' }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print_hash: true
